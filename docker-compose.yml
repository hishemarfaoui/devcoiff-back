#version: "3.8"
#
#services:
#  mysqldb:
#    image: mysql:5.7
#    restart: unless-stopped
#    environment:
#      - MYSQL_ROOT_PASSWORD=
#      - MYSQL_DATABASE=coiffure
#    ports:
#      - 3306:3306
#    volumes:
#      - db:/var/lib/mysql
#  app:
#    depends_on:
#      - mysqldb
#    build: C:\Users\Hichem\eclipse-workspace\DevCoiff\DevCoiff
#    restart: on-failure
#    ports:
#      - 7071:7071
#    environment:
#      SPRING_APPLICATION_JSON: '{
#        "spring.datasource.url"  : "jdbc:mysql://mysqldb:3306/coiffure?useSSL=false",
#        "spring.datasource.username" : "root",
#        "spring.datasource.password" : "hichem",
#        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
#        "spring.jpa.hibernate.ddl-auto" : "create-drop"
#      }'
#    volumes:
#      - .m2:/root/.m2
#    stdin_open: true
#    tty: true
#
#volumes:
#  db:


# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)
version: '3.7'

# Define services
services:
  # App backend service
  app-server:
    # Configuration for building the docker image for the backend service
    build:
      context: C:\Users\Hichem\eclipse-workspace\DevCoiff\DevCoiff # Use an image built from the specified dockerfile in the `spring-boot-oauth2-social-login` directory.
      dockerfile: Dockerfile
    ports:
      - "7071:7071" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    depends_on:
      - db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/coiffure?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: hichem
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
      - frontend

  # Frontend Service
  app-client:
    build:
      context: C:\Users\Hichem\WebstormProjects\RvCoiff # Use an image built from the specified dockerfile in the `angular-11-social-login` directory.
      dockerfile: Dockerfile
      args:
        API_BASE_URL: http://127.0.0.1:7071/
    ports:
      - "8081:80" # Map the exposed port 80 on the container to port 8081 on the host machine
    restart: always
    depends_on:
      - app-server
    networks:
      - frontend

  # Database Service (Mysql)
  db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: coiffure
      MYSQL_USER: user
      MYSQL_PASSWORD: hichem
    networks:
      - backend

# Networks to be created to facilitate communication between containers
networks:
  backend:
  frontend: